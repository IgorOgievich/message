{"version":3,"sources":["Monday/Message/Message.module.css","Navigations/Navigations.module.css","Monday/Qualities/Qualities.module.css","Monday/ShowName/ShowName.module.css","Header/Header.module.css","Monday/monday.module.css","Monday/ShowName/DisplayName/DisplayName.module.css","Monday/ShowName/Span/Span.module.css"," Tuesday/Tuesday.module.css","Header/Header.jsx","Navigations/Navigations.jsx","Monday/Message/Message.jsx","Monday/Qualities/Qualities.jsx","Monday/ShowName/DisplayName/DisplayName.jsx","Monday/ShowName/Input/Input.jsx","Monday/ShowName/Span/Span.jsx","Monday/ShowName/ShowName.jsx","Monday/Monday.jsx"," Tuesday/Tuesday.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["module","exports","Header","render","className","a","header","React","Component","Navigations","nav","items","to","Message","myMessage","borderMessage","name","before","after","text","time","arrQualities","quality","Qualities","props","myQualities","map","el","i","qualities","key","NewQualities","blockQualities","DisplayName","displayName","Input","classInput","type","value","onChange","placeholder","onKeyPress","Span","spanValue","valueSpan","ShowName","state","tasks","valueInputName","valueInputNumber","error","addTask","newText","newTask","nameTask","newTasks","setState","onValueInputNameChange","e","currentTarget","onClickAddButton","plus","alert","arrName","classForError","showName","spanInputButton","onClick","Monday","content","Tuesday","tuesday","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.33e6192c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"borderMessage\":\"Message_borderMessage__1a1uZ\",\"before\":\"Message_before__GWEkD\",\"after\":\"Message_after__rjrki\",\"myMessage\":\"Message_myMessage__2K3hc\",\"name\":\"Message_name__cKnVE\",\"text\":\"Message_text__20E28\",\"time\":\"Message_time__3Jnkh\",\"wrapper\":\"Message_wrapper__gfnom\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navigations_nav__JWHsY\",\"items\":\"Navigations_items__29OS1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"qualities\":\"Qualities_qualities__3dNjZ\",\"blockQualities\":\"Qualities_blockQualities__3dvLG\",\"NewQualities\":\"Qualities_NewQualities__1Jall\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"showName\":\"ShowName_showName__3t5bJ\",\"spanInputButton\":\"ShowName_spanInputButton__1xOk3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__26ZHt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"monday_content__hHBlk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"displayName\":\"DisplayName_displayName__11jsZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spanValue\":\"Span_spanValue__18wyX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tuesday\":\"Tuesday_tuesday__3U3ow\"};","import React from 'react';\nimport '../App.css';\nimport a from '../Header/Header.module.css'\n\nclass Header extends React.Component {\n    render = () => {\n        return (\n            <div className={a.header}>\n                <h1>Проект Игоря Огиевича</h1>\n            </div>\n        );\n    };\n}\n\nexport default Header;\n","import React from 'react';\nimport '../App.css';\nimport a from '../Navigations/Navigations.module.css'\nimport {NavLink} from \"react-router-dom\";\n\n\nclass Navigations extends React.Component {\n    render = () => {\n        return (\n            <div className={a.nav}>\n                <div className={a.items}>\n                    <NavLink to=\"/Monday\" >\n                    <button> Понедельник </button>\n                    </NavLink>\n                </div>\n                <div className={a.items}>\n                    <NavLink to=\"/Tuesday\" >\n                    <button> Вторник </button>\n                    </NavLink>\n                </div>\n            </div>\n        );\n    };\n}\n\nexport default Navigations;\n","import React from 'react';\nimport a from \"./Message.module.css\";\n\nfunction Message() {\n    return (\n        <div className={a.myMessage}>\n            <div className={a.borderMessage}>\n                <div className={a.name}>\n                    Igor Ogievichjgyjg\n                </div>\n                <div className={a.before}>\n\n                </div>\n                <div className={a.after}>\n\n                </div>\n                <div className={a.text}>\n                    Hello, how are you?\n                </div>\n                <div className={a.time}>\n                    12:20 AM\n                </div>\n            </div>\n        </div>\n\n    );\n}\n\nexport default Message;\n","import React from 'react';\r\nimport a from \"./Qualities.module.css\";\r\n\r\nlet arrQualities = [\r\n    {quality: \"Умный\"},\r\n    {quality: \"Красивый\"},\r\n    {quality: \"Богатый\"}\r\n];\r\n\r\nfunction Qualities(props) {\r\n    let myQualities = arrQualities.map((el, i) => (i === 1) ?\r\n        <div className={a.qualities} key={i}> - {el.quality} </div> :\r\n        <div className={a.NewQualities} key={i}> - {el.quality} </div>\r\n    );\r\n\r\n    return (\r\n        <div className={a.blockQualities}>\r\n            {myQualities}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Qualities;","import React from 'react';\nimport a from \"../DisplayName/DisplayName.module.css\";\n\nclass DisplayName extends React.Component {\n    render = () => {\n        return (\n            <div className={a.displayName}>\n                {this.props.name}\n            </div>\n        );\n    };\n}\n\nexport default DisplayName;\n","import React from 'react';\nimport \"../Input/Input.css\"\n\nclass Input extends React.Component {\n    render = () => {\n        return (\n            <div className={this.props.classInput}>\n                <input type=\"text\"\n                       value={this.props.value}\n                       onChange={this.props.onChange}\n                       placeholder=\"Введите ваше имя\"\n                       onKeyPress={this.props.onKeyPress}\n                />\n            </div>\n        );\n    };\n}\n\nexport default Input;\n","import React from 'react';\nimport a from \"../Span/Span.module.css\";\n\nclass Span extends React.Component {\n    render = () => {\n        return (\n            <div className={a.spanValue}>\n                <span>\n                    {this.props.valueSpan}\n                </span>\n            </div>\n        );\n    };\n}\n\nexport default Span;\n","import React from 'react';\nimport a from \"../ShowName/ShowName.module.css\";\nimport DisplayName from \"./DisplayName/DisplayName\";\nimport Input from \"./Input/Input\";\nimport Span from \"./Span/Span\";\n\nclass ShowName extends React.Component {\n\n    state = {\n        tasks: [\n            // {nameTask: \"Igor\"},\n        ],\n        valueInputName: \"\",\n        valueInputNumber: 0,\n        error: false,\n    };\n\n    addTask = (newText) => {\n        let newTask = {nameTask: newText};\n        let newTasks = [...this.state.tasks, newTask];\n        this.setState({\n            tasks: newTasks\n        })\n    };\n\n    onValueInputNameChange = (e) => {\n        this.setState({\n            valueInputName: e.currentTarget.value\n        });\n    };\n\n    onClickAddButton = () => {\n        let valueInputName = this.state.valueInputName;\n        let valueInputNumber = this.state.valueInputNumber;\n        let plus = valueInputNumber + 1;\n        this.addTask(valueInputName);\n        this.state.valueInputName = \"\";\n        if (valueInputName === \"\") {\n            this.setState({error: true});\n        } else {\n            this.setState({error: false});\n            this.setState({valueInputNumber: plus});\n            alert(\"Привет \" + `${valueInputName}`);\n        }\n    };\n\n    onKeyPress = (e) => {\n        if (e.key === \"Enter\") {\n            this.onClickAddButton();\n        }\n    };\n\n    render = () => {\n\n        let arrName = this.state.tasks.map(e => <DisplayName name={e.nameTask}/>);\n        let classForError = this.state.error ? \"error\" : \"inputOne\";\n        return (\n            <div className={a.showName}>\n                <p>Ваше имя:</p>\n                <div className={a.spanInputButton}>\n                    <Span valueSpan={this.state.valueInputNumber}/>\n                    <Input\n                        classInput={classForError}\n                        value={this.state.valueInputName}\n                        onChange={this.onValueInputNameChange}\n                        onKeyPress={this.onKeyPress}\n                    />\n                    <button onClick={this.onClickAddButton}>Add</button>\n\n                </div>\n\n                <p>Введенные имена:</p>\n                {arrName}\n            </div>\n        );\n    };\n}\n\nexport default ShowName;\n","import React from 'react';\nimport '../App.css';\nimport a from './monday.module.css'\nimport Message from \"../Monday/Message/Message\";\nimport Qualities from \"../Monday/Qualities/Qualities\";\nimport ShowName from \"../Monday/ShowName/ShowName\";\n\nclass Monday extends React.Component {\n    render = () => {\n        return (\n            <div className={a.content}>\n                <Message/>\n                <Qualities/>\n                <ShowName/>\n\n            </div>\n        );\n    };\n}\n\nexport default Monday;\n","import React from 'react';\nimport '../App.css';\nimport a from './Tuesday.module.css'\n\nclass Tuesday extends React.Component {\n    render = () => {\n        return (\n            <div className={a.tuesday}>\n              <h1>Hello</h1>\n            </div>\n        );\n    };\n}\n\nexport default Tuesday;\n","import React from 'react';\nimport './App.css';\nimport Header from \"./Header/Header\";\nimport Navigations from \"./Navigations/Navigations\";\nimport Monday from \"./Monday/Monday\";\nimport Tuesday from \"./ Tuesday/Tuesday\";\nimport {HashRouter, Route} from \"react-router-dom\";\n\n\nclass App extends React.Component {\n    render = () => {\n\n        return (\n            <HashRouter>\n                <div className=\"App\">\n                    <div className=\"header\">\n                        <Header/>\n                    </div>\n                    <div className=\"navAndContent\">\n                        <Navigations/>\n                        <Route exact path=\"/Monday\" render={() => <Monday/>}/>\n                        <Route exact path=\"/Tuesday\" render={() => <Tuesday/>}/>\n                    </div>\n                </div>\n            </HashRouter>\n        );\n    };\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Monday is cached for offline use.\" message.\n              console.log('Monday is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}